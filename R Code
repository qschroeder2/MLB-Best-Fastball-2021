---
title: "Fastball Features"
author: "Quinn Schroeder"
date: '2022-07-28'
output: html_document
---

```{r - Libraries}
library(baseballr)
library(plyr)
library(dplyr)
library(rvest)
library(stringr)
library(caret)
library(car)
library(onewaytests)
library(randomForest)
library(readxl)
library(reshape2)
```

```{r - Read Data}
# Statcast data - movement, velo, spin, etc.
csv1 <- read.csv("C:/Users/qschr/Desktop/Data Projects/MLB/Fastball Features/statcast fastball data.csv",
                     header=TRUE,sep=",") %>% select(1:10)
csv2 <- read.csv("C:/Users/qschr/Desktop/Data Projects/MLB/Fastball Features/statcast fastball results 2020.csv",
                     header=TRUE,sep=",") %>% 
  select(player_id,whiff_percent,hard_hit_percent) %>%
  mutate(year='2020')
csv3 <- read.csv("C:/Users/qschr/Desktop/Data Projects/MLB/Fastball Features/statcast fastball results 2021.csv",
                     header=TRUE,sep=",") %>% 
  select(player_id,whiff_percent,hard_hit_percent) %>%
  mutate(year='2021')

# Release point data
PitcherList20 <- unique(csv2$player_id)
for (i in 1:length(PitcherList20)) {
  temp <- scrape_statcast_savant_pitcher(start_date = "2020-01-01",end_date = "2020-12-31",
                                         pitcherid = PitcherList20[i]) %>%
    select(pitch_type,release_pos_x,release_pos_z,player_name,pitcher,p_throws,effective_speed,release_extension) %>%
    subset(pitch_type=="FF") %>%
    filter(!is.na(release_extension) & !is.na(effective_speed)) %>%
    mutate(release_pos_x=abs(release_pos_x),release_pos_z=abs(release_pos_z), year=2020) %>% 
    group_by(player_name,pitcher,p_throws,pitch_type,year) %>%
    summarise(release_pos_x=round(mean(release_pos_x),2),release_pos_z=round(mean(release_pos_z),2),
              effective_velocity=round(mean(effective_speed),2),avg_extension=round(mean(release_extension),2),
              pitch_count=dplyr::n(),.groups='drop')
  if (i==1) {
    data20 <- temp
    } else {
      data20 <- rbind(temp,data20)
      }
}
PitcherList21 <- unique(csv3$player_id)
for (i in 1:length(PitcherList21)) {
  temp <- scrape_statcast_savant_pitcher(start_date = "2021-01-01",end_date = "2021-12-31",
                                         pitcherid = PitcherList21[i]) %>%
    select(pitch_type,release_pos_x,release_pos_z,player_name,pitcher,p_throws,effective_speed,release_extension) %>%
    subset(pitch_type=="FF") %>%
    filter(!is.na(release_extension) & !is.na(effective_speed)) %>%
    mutate(release_pos_x=abs(release_pos_x),release_pos_z=abs(release_pos_z), year=2021) %>% 
    group_by(player_name,pitcher,p_throws,pitch_type,year) %>%
    summarise(release_pos_x=round(mean(release_pos_x),2),release_pos_z=round(mean(release_pos_z),2),
              effective_velocity=round(mean(effective_speed),2),avg_extension=round(mean(release_extension),2),
              pitch_count=dplyr::n(),.groups='drop')
  if (i==1) {
    data21 <- temp
    } else {
      data21 <- rbind(temp,data21)
      }
}
release_data <- rbind(data21,data20)
names(release_data)[names(release_data) == "pitcher"] <- "player_id"
rm(PitcherList20,PitcherList21,data20,data21,i,temp)

# Active spin data
observed2020 <- read.csv("C:/Users/qschr/Desktop/Data Projects/MLB/Fastball Features/2020 observed.csv",
                     header=TRUE,sep=",") %>% filter(!is.na(active_spin_fourseam)) %>%
  mutate(year=2020,last_name=ï..last_name,active_observed=active_spin_fourseam) %>%
  select(last_name,first_name,year,active_observed)
spinbased2020 <- read.csv("C:/Users/qschr/Desktop/Data Projects/MLB/Fastball Features/2020 spin based.csv",
                     header=TRUE,sep=",") %>% filter(!is.na(active_spin_fourseam)) %>%
  mutate(year=2020,last_name=ï..last_name,active_spinbased=active_spin_fourseam) %>%
  select(last_name,first_name,year,active_spinbased)

observed2021 <- read.csv("C:/Users/qschr/Desktop/Data Projects/MLB/Fastball Features/2021 observed.csv",
                     header=TRUE,sep=",") %>% filter(!is.na(active_spin_fourseam)) %>%
  mutate(year=2021,last_name=ï..last_name,active_observed=active_spin_fourseam) %>%
  select(last_name,first_name,year,active_observed)
spinbased2021 <- read.csv("C:/Users/qschr/Desktop/Data Projects/MLB/Fastball Features/2021 spin based.csv",
                     header=TRUE,sep=",") %>% filter(!is.na(active_spin_fourseam)) %>%
  mutate(year=2021,last_name=ï..last_name,active_spinbased=active_spin_fourseam) %>%
  select(last_name,first_name,year,active_spinbased)
```

```{r - Reorganize data}
statcast <- join(csv1,csv2,by=c("player_id","year"), type="inner")
statcast2 <- join(csv1,csv3,by=c("player_id","year"), type="inner")
statcast <- rbind(statcast,statcast2)
fulldata <- join(statcast,release_data,by=c("player_id","year"), type="inner") %>%
  mutate(last_name=ï..last_name) %>% select(13,21,2:4,14,5:12,16:20)

# Spin Data
spin2020 <- join(observed2020,spinbased2020,by=c("last_name","first_name","year"),type="inner")
spin2021 <- join(observed2021,spinbased2021,by=c("last_name","first_name","year"),type="inner")
active_spin <- rbind(spin2020,spin2021)
active_spin$first_name <- str_replace_all(active_spin$first_name, "Ã©", "e")
active_spin$first_name <- str_replace_all(active_spin$first_name, "Ã¡", "a")
active_spin$first_name <- str_replace_all(active_spin$first_name, "Ã­", "i")
active_spin$first_name <- str_replace_all(active_spin$first_name, "Ã³", "o")
active_spin$first_name <- str_replace_all(active_spin$first_name, "Ãº", "u")
active_spin$first_name <- str_replace_all(active_spin$first_name, "Ã±", "n")

active_spin$last_name <- str_replace_all(active_spin$last_name, "Ã¡", "a")
active_spin$last_name <- str_replace_all(active_spin$last_name, "Ã­", "i")
active_spin$last_name <- str_replace_all(active_spin$last_name, "Ã©", "e")
active_spin$last_name <- str_replace_all(active_spin$last_name, "Ã³", "o")
active_spin$last_name <- str_replace_all(active_spin$last_name, "Ãº", "u")
active_spin$last_name <- str_replace_all(active_spin$last_name, "Ã±", "n")
	
# Final Data set
full_data <- join(fulldata,active_spin,by=c("last_name","first_name","year"),type="inner") %>%
  mutate(seam_wake = active_observed - active_spinbased,lefty = ifelse(p_throws == "L",1,0))

# Clean environment
rm(csv1,csv2,csv3,statcast2,release_data,statcast,spinbased2020,spinbased2021,observed2020,observed2021,spin2020,spin2021,fulldata,active_spin)
```

```{r - Model Building}
set.seed(110) 
training.samples <- full_data$player_id %>% createDataPartition(p = 0.8, list = FALSE)
train <- full_data[training.samples,]
test <- full_data[-training.samples,]

# Whiff Pct Model
whiff_fullmodel <- lm(whiff_percent~ff_avg_speed+ff_avg_spin+ff_avg_break_x+ff_avg_break_z+ff_range_speed+release_pos_x+release_pos_z+effective_velocity+avg_extension+active_observed+seam_wake+lefty,train)

Anova(whiff_fullmodel,Type = II)
summary(whiff_fullmodel)

whiff_reducedmodel <- lm(whiff_percent~ff_avg_speed+ff_avg_spin+ff_avg_break_z+release_pos_x+release_pos_z+avg_extension,train)

Anova(whiff_reducedmodel,Type = II)
summary(whiff_reducedmodel)
sd(train$whiff_percent)

# Random election model 
rf1 <- randomForest(whiff_percent~ff_avg_speed+ff_avg_spin+ff_avg_break_x+ff_avg_break_z+ff_range_speed+release_pos_x+release_pos_z+effective_velocity+avg_extension+active_observed+seam_wake+lefty,data = train,na.action = na.omit)

which.min(rf1$mse)
plot(rf1)

model_tuned <- tuneRF(x=train[,c("ff_avg_speed","ff_avg_spin","ff_avg_break_x","ff_avg_break_z","ff_range_speed","release_pos_x","release_pos_z","effective_velocity","avg_extension","active_observed","seam_wake","lefty")],y=train$whiff_percent,ntreeTry = 500,mtryStart = 4,stepFactor = 1.5,improve = 0.01, trace = FALSE) # Use mtry = 3 for lowest OOB error

rf2 <- randomForest(whiff_percent~ff_avg_speed+ff_avg_spin+ff_avg_break_x+ff_avg_break_z+ff_range_speed+release_pos_x+release_pos_z+effective_velocity+avg_extension+active_observed+seam_wake+lefty,data = train,mtry = 3,ntree = 1000,na.action = na.omit)

which.min(rf2$mse)
plot(rf2) # Error evens out as trees -> 1000, expand ntree to 1000
varImpPlot(rf2)

# Hard Hit Per Model
hh_fullmodel <- lm(hard_hit_percent~ff_avg_speed+ff_avg_spin+ff_avg_break_x+ff_avg_break_z+ff_range_speed+release_pos_x+release_pos_z+effective_velocity+avg_extension+active_observed+seam_wake+lefty,train)

Anova(hh_fullmodel,Type = II)
summary(hh_fullmodel)
sd(train$hard_hit_percent)

hh_reducedmodel <- lm(hard_hit_percent~ff_avg_speed+ff_range_speed+release_pos_x+effective_velocity+avg_extension+seam_wake,train)

Anova(hh_reducedmodel,Type = II)
summary(hh_reducedmodel)
```

```{r - Assumption Test}
# Brown-Foresythe Test - Not significant
train$groupsWhiff <- cut(train$ff_avg_speed+train$ff_avg_spin+train$ff_avg_break_z+train$release_pos_x+train$release_pos_z+train$avg_extension, 5)
train$residualsWhiff <- whiff_reducedmodel$residuals
bf.test(residualsWhiff~groupsWhiff, train)

train$groupsHH <- cut(train$ff_avg_speed+train$ff_range_speed+train$release_pos_x+train$effective_velocity+train$avg_extension+train$seam_wake, 5)
train$residualsHH <- hh_reducedmodel$residuals
bf.test(residualsHH~groupsHH, train)

# Plots to test Normality of Residuals and Linearity of Data
# Test for Influential points - no influential points
plot(whiff_reducedmodel)
plot(hh_reducedmodel)

# Multicollinearity Check
vif(whiff_reducedmodel) # No issues
vif(hh_reducedmodel) # Issues caused by effective velo

# Build model again from scratch without effective velo
hh_modrev <- lm(hard_hit_percent~ff_avg_spin+ff_range_speed+release_pos_x+active_observed+lefty,train)

Anova(hh_modrev,Type = II)
summary(hh_modrev)
vif(hh_modrev)

predictions1 <- predict(hh_reducedmodel, test)
predictions2 <- predict(hh_modrev, test)

data.frame(R2 = R2(predictions1,test$hard_hit_percent),RMSE = RMSE(predictions1,test$hard_hit_percent),
           MAE = MAE(predictions1,test$hard_hit_percent),AIC = AIC(hh_reducedmodel))
data.frame(R2_2 = R2(predictions2,test$hard_hit_percent),RMSE_2 = RMSE(predictions2,test$hard_hit_percent),
           MAE_2 = MAE(predictions2,test$hard_hit_percent),AIC_2 = AIC(hh_modrev))
# Neither model is good but enhanced model is better
rm(predictions1,predictions2,hh_reducedmodel)
```

```{r - Model Selection}
# Whiff Rate
predictions <- predict(whiff_reducedmodel, test)
predictions2 <- predict(rf2, test)

LM <- data.frame(Model = "Linear",R2 = R2(predictions,test$whiff_percent),RMSE = RMSE(predictions,test$whiff_percent),
           MAE = MAE(predictions,test$whiff_percent))
RF <- data.frame(Model = "RF",R2 = R2(predictions2,test$whiff_percent),RMSE = RMSE(predictions2,test$whiff_percent),
           MAE = MAE(predictions2,test$whiff_percent))
rbind(LM,RF)
rm(predictions,predictions2)
# Random Forest Model is better
final_mod <- randomForest(whiff_percent~ff_avg_speed+ff_avg_spin+ff_avg_break_x+ff_avg_break_z+ff_range_speed+release_pos_x+release_pos_z+effective_velocity+avg_extension+active_observed+seam_wake+lefty,data = train,mtry = 3,ntree = 1000,na.action = na.omit)
rm(rf1,rf2,training.samples,whiff_fullmodel,whiff_reducedmodel,test,train,model_tuned,LM,RF)

# Hard Hit rate is not useful to model, is it sticky year to year or just random?
rm(hh_fullmodel,hh_modrev)
```

```{r - Hard Hit Rate Investigation}
hh_data <- readxl::read_excel("C:/Users/qschr/Desktop/Data Projects/MLB/Fastball Features/Hard Hit Rate Year to Year.xlsx")
summary(hh_data) #slightly increases each year
hh_data <- hh_data %>% 
  select(Player,'2019','2020','2021','2022')
hh_data <- na.omit(hh_data)
cat("Hard Hit Rate Correlation", "\n")
#plot(hh_data[,2:5])
cor(hh_data[,2:5])

whiff_data <- readxl::read_excel("C:/Users/qschr/Desktop/Data Projects/MLB/Fastball Features/whiff_Y2Y.xlsx")
#summary(whiff_data)
whiff_data <- na.omit(whiff_data)
cat("\n", "Whiff Rate Correlation", "\n")
#plot(whiff_data[,2:5])
cor(whiff_data[,2:5])
```
